<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyIotSharp.Core</name>
    </assembly>
    <members>
        <member name="T:EasyIotSharp.Core.BizError">
            <summary>
            定义业务的全局错误返回
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.BizError.ErrCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.BizError.ErrMessage">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.BizException">
            <summary>
            通用的业务错误异常包装
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.CachingConsts.Keys">
            <summary>
            缓存的所有KEY的定义
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.Keys.BASE">
            <summary>
            项目缓存前缀（清除所有用）
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.DEFAULT_EXPIRES_MINUTES">
            <summary>
            缓存默认过期 = 12小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.QUERY_EXPIRES_MINUTES">
            <summary>
            检索相关的缓存过期时间（相对精准）
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.SEARCH_EXPIRES_MINUTES">
            <summary>
            检索相关的缓存过期时间（非精准关键字） = 1小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.USER_EXPIRES_MINUTES">
            <summary>
            用户相关的缓存过期时间 = 2小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.CARD_EXPIRES_MINUTES">
            <summary>
            会员卡相关的缓存过期时间= 1小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.EVALUATION_EXPIRES_MINUTES">
            <summary>
            测评相关的缓存过期时间= 1小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.PROFESSIONORIENTATION_EXPIRES_MINUTES">
            <summary>
            单个专业定位测评详情相关的缓存过期时间= 半小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.TEN_EXPIRES_MINUTES">
            <summary>
            缓存10分钟过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.THIRTY_EXPIRES_MINUTES">
            <summary>
            缓存30分钟过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.TWENTY_FOUR_EXPIRES_HOURS">
            <summary>
            缓存24小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Caching.CachingConsts.ACCESSTOKEN_EXPIRED_SECONDS">
            <summary>
            微信开发平台授权ACCESSTOKEN过期时间（官方默认过期时间7200秒，考虑接口调用耗时，本地缓存缩短30秒）
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.CachingServiceBase">
            <summary>
            缓存服务基类
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.CurrentRedisCacheDatabaseProvider">
            <summary>
            自定义的配置
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.CurrentRedisCacheDatabaseProvider.GetDatabase">
             <summary>
            获取数据库连接
             </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.CurrentRedisCacheDatabaseProvider_TwemProxy">
            <summary>
            自定义的配置(分片)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.CurrentRedisCacheManagerProvider">
            <summary>
            根据配置文件返回CacheManager的提供
            Redis或内存
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.Extensions">
            <summary>
            缓存扩展
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.EncryptKeyParam(System.String)">
            <summary>
            加密Key的参数，主要为了加密中文等非法字符（统一用一种加密方式） 如果感觉参数值有可能会出现非法，则使用此方法加密
            </summary>
            <param name="keyParam"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.GetAsyncExt``2(UPrime.Runtime.Caching.ICache,``0,System.Func{System.Threading.Tasks.Task{``1}},System.TimeSpan)">
            <summary>
            获取缓存扩展
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="cache"></param>
            <param name="key"></param>
            <param name="factory"></param>
            <param name="strategy">指定缓存策略</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.GetExt``2(UPrime.Runtime.Caching.ICache,``0,System.Func{``1},System.Int32)">
            <summary>
            获取缓存扩展
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="cache"></param>
            <param name="key"></param>
            <param name="factory"></param>
            <param name="strategy">指定缓存策略</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.Days(System.Int32)">
            <summary>按天缓存时间</summary>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.Hours(System.Int32)">
            <summary>按小时缓存时间</summary>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.Minutes(System.Int32)">
            <summary>按分钟缓存时间</summary>
        </member>
        <member name="M:EasyIotSharp.Core.Caching.Extensions.Seconds(System.Int32)">
            <summary>按秒缓存时间</summary>
        </member>
        <member name="T:EasyIotSharp.Core.Caching.ICacheService">
            <summary>
            缓存服务的标记
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.APIServiceOptions">
            <summary>
            依赖的外部服务配置项
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.APIServiceOptions.BasicLib">
            <summary>
            datalib url
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.AppOptions">
            <summary>
            【配置项】应用下所有配置的聚合
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.Name">
            <summary>
            应用名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.Host">
            <summary>
            主机地址+端口
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.SetMinThreads">
            <summary>
            最小工作线程
            16 = 不设置
            https://stackexchange.github.io/StackExchange.Redis/Timeouts
            当大量并发进入服务器时，线程池立即创建线程来达到这个最小值，超过最小值后线程池创建新的线程速率是比较慢的，这时新的线程来不及创建补充从而造成阻塞排队。
            16 核 16G 最大工作线程 = 32767
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.StorageOptions">
            <summary>
            存储配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.CachingOptions">
            <summary>
            缓存配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.APIServiceOptions">
            <summary>
            DMS api 地址相关
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.WatchmenOptions">
             <summary>
            【watchmen】token配置项
             </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.ESPaggingOptions">
            <summary>
            es 分页读写相关
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.QueueOptions">
            <summary>
            消息队列配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.AppOptions.CorpWeixinOptions">
            <summary>
            企业微信通知发送配置
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Configuration.AppOptions.ReadFromConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化读取
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.CachingOptions">
            <summary>
            应用缓存配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CachingOptions.IsOpen">
            <summary>
            是否开启缓存
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CachingOptions.RedisEnabled">
            <summary>
            是否开启Redis cache true = redis false = 内存
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CachingOptions.RedisConnStr">
            <summary>
            Redis连接字符串
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CachingOptions.RedisTwemProxyEnabled">
            <summary>
            是否开启 twemproxy 分片代理
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CachingOptions.RedisDatabaseId">
            <summary>
            数据库Id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.CorpWeixinOptions">
            <summary>
            企业微信配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CorpWeixinOptions.CorpId">
            <summary>
            企业微信ID
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CorpWeixinOptions.AuthAgentId">
             <summary>
            代理商授权ID
             </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.CorpWeixinOptions.AuthSecret">
             <summary>
            密钥
             </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Configuration.CorpWeixinOptions.ReadFromConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化读取
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.ESPaggingOptions">
            <summary>
            es分页相关配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.ESPaggingOptions.MaxReadCount">
            <summary>
            单次读取的最大数量
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.ESPaggingOptions.MaxWriteCount">
            <summary>
            单次写入的最大数量
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.IgnoreParamAttribute">
            <summary>
            实体转换为字典时忽略的参数
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.JWTTokenOptions">
            <summary>
            JWTToken验证配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.JWTTokenOptions.PublicKey">
            <summary>
            RS256公钥
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.JWTTokenOptions.PrivateKey">
            <summary>
            RS256私钥
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.JWT_User">
            <summary>
            JWT Token解析后的用户对象
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.JWT_User.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.JWT_User.IssuedAt">
            <summary>
            签发时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.JWT_User.ExpireTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.QueueOptions">
            <summary>
            消息中间件配置项
            - Kafka
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.QueueOptions.KafkaEnabled">
            <summary>
            Kafka：是否开启
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.QueueOptions.KafkaBrokerList">
            <summary>
            Kafka：broker 服务列表
             ex: x.x.x.x:9092
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.QueueOptions.KafkaGroupId">
            <summary>
            Kafka：订阅组标识
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.StorageOptions">
            <summary>
            应用的数据库存储配置
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.StorageOptions.Elasticsearch">
            <summary>
            elasticsearch 连接配置
            ["node1:9200", "node2:9200", .. ]
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.UserTokenData.UserId">
            <summary>
            当前用户Id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.UserTokenData.UserName">
            <summary>
            当前用户名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.UserTokenData.TenantId">
            <summary>
            当前租户Id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.UserTokenData.TenantNumId">
            <summary>
            当前租户NumId
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Configuration.WatchmenOptions">
            <summary>
            【watchmen】token配置项
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.WatchmenOptions.APIBaseUrl">
            <summary>
            API地址
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.WatchmenOptions.AppId">
            <summary>
            应用id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.WatchmenOptions.Secret">
            <summary>
            应用秘钥
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Configuration.WatchmenOptions.GrantType">
            <summary>
            授权模式
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.BaseEntity`1">
            <summary>
            实体类基类
            </summary>
            <typeparam name="TPrimaryKey"></typeparam>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.BaseEntity`1.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.BaseEntity`1.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.BaseEntity`1.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.BaseEntity`1.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.BaseEntity`1.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.BaseEntity`1.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Domain.BaseEntity`1.IsTransient">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Hardware.Protocol">
            <summary>
            协议表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Protocol.Name">
            <summary>
            协议名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Protocol.Remark">
            <summary>
            协议描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Protocol.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig">
            <summary>
            协议表单配置表
            </summary>
            <remarks>构建动态表单</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.Identifier">
            <summary>
            标识符
            （反序列化到class里面对应的字段名）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.Placeholder">
            <summary>
            文本提示
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.TagType">
            <summary>
            <see cref="T:EasyIotSharp.Core.TagTypeMenu"/>
            标签类型  select、number、text
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.IsRequired">
            <summary>
            是否必填
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.ValidateType">
            <summary>
            <see cref="T:EasyIotSharp.Core.DataTypeMenu"/>
            验证数据类型
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.ValidateMessage">
            <summary>
            验证数据类型不正确提示
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfig.Sort">
            <summary>
            排序字段
            (数字越大越靠前)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Hardware.ProtocolConfigExt">
            <summary>
            协议配置扩展表
            </summary>
            <remarks>代表一条协议配置表单元素关联的额外扩展数据，例如下拉select的option</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfigExt.ProtocolConfigId">
            <summary>
            协议配置id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfigExt.Label">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.ProtocolConfigExt.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Hardware.Sensor">
            <summary>
            传感器表
            </summary>
            <remarks>一个传感器设备</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Sensor.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Sensor.Name">
            <summary>
            测点类型名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Sensor.BriefName">
            <summary>
            简称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Sensor.Supplier">
            <summary>
            厂家名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Sensor.SensorModel">
            <summary>
            传感器型号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.Sensor.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Hardware.SensorQuota">
            <summary>
            传感器指标表
            </summary>
             <remarks>一个传感器设备对应测对应的数据   温度  倾斜度等</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.SensorId">
            <summary>
            传感器类型id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.Name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.Identifier">
            <summary>
            指标标识符
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.ControlsType">
            <summary>
            操作类型
            R=只读
            W=只写
            RW=读写
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.DataType">
            <summary>
            <see cref="T:EasyIotSharp.Core.DataTypeMenu"/>
            数据类型
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.Precision">
            <summary>
            小数位精度
            数据类型是double float  小数点取几位
            -1=全部
            0=零位
            1=一位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Hardware.SensorQuota.Sort">
            <summary>
            排序字段
            (数字越大越靠前)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Proejct.Classification">
            <summary>
            分类表
            </summary>
            <remarks>项目下面的分类，一个类别里面关联的是多个测点</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Classification.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Classification.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Classification.Name">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Classification.Sort">
            <summary>
            排序字段
            字段越大越靠前
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Proejct.Device">
            <summary>
            设备表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Device.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Device.Name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Device.State">
            <summary>
            设备状态
            0=初始化
            1=在线
            2=离线
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Device.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.Device.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Proejct.DeviceProtocol">
            <summary>
            网关协议表
            </summary>
            <remarks>定于当前网关所选的协议传输过来的存储数据</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.DeviceProtocol.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.DeviceProtocol.DeviceId">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.DeviceProtocol.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.DeviceProtocol.ProtocoConfigId">
            <summary>
            协议配置id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.DeviceProtocol.ConfigJson">
            <summary>
            json定义
            网关发送命令json数据
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Proejct.ProjectBase">
            <summary>
            项目表
            </summary>
            <remarks>每个租户可以创建多个项目，每个项目包含测点、设备等数据收集部署</remarks>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.Name">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.latitude">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.State">
            <summary>
            项目状态
            0=初始化状态
            1=正在运行状态
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.Address">
            <summary>
            项目地址
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.ProjectBase.Remark">
            <summary>
            项目描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Proejct.SensorPoint">
            <summary>
            测点表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.SensorPoint.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.SensorPoint.Name">
            <summary>
            测点名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.SensorPoint.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.SensorPoint.ClassificationId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.SensorPoint.DeviceId">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Proejct.SensorPoint.SensorId">
            <summary>
            传感器Id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.TenantAccount.Menu">
            <summary>
            租户菜单表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.ParentId">
            <summary>
            父级id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.Type">
            <summary>
            类型
            1=菜单
            2=路由
            3=按钮
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.Sort">
            <summary>
            排序
            (数字越大越靠前）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Menu.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.TenantAccount.Role">
            <summary>
            租户角色表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Role.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Role.IsManager">
            <summary>
            是否管理员（一个租户只有一个用户拥有一个管理员角色）
            1=管理员
            2=普通用户
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Role.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Role.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Role.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.TenantAccount.RoleMenu">
            <summary>
            角色菜单表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.RoleMenu.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.RoleMenu.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.RoleMenu.MenuId">
            <summary>
            菜单id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.TenantAccount.Soldier">
            <summary>
            租户用户表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.TenantNumId">
            <summary>
            租户numId
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.IsManager">
            <summary>
            是否管理员
            1=管理员
            2=普通用户
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.IsTest">
            <summary>
            是否测试
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.Sex">
            <summary>
            姓别：1=男，2=女，-1 = 不选
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.Soldier.LastLoginTime">
            <summary>
            最后一次登录时间
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.TenantAccount.SoldierRole">
            <summary>
            用户角色表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.SoldierRole.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.SoldierRole.IsManager">
            <summary>
            是否管理员（一个租户只有一个用户拥有一个管理员角色）
            1=管理员
            2=普通用户
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.SoldierRole.SoldierId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.TenantAccount.SoldierRole.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Domain.Tenant.Tenant">
            <summary>
            租户表
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.NumId">
            <summary>
            numId
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.StoreKey">
            <summary>
            机构的（唯一的等同Id）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.ContractName">
            <summary>
            合同名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.ContractOwnerName">
            <summary>
            合同所属人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.ContractOwnerMobile">
            <summary>
            合同所属人电话
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.ContractStartTime">
            <summary>
            合同开始时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.ContractEndTime">
            <summary>
            合同结束时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.Mobile">
            <summary>
            机构的负责人手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.Owner">
            <summary>
            机构的负责人姓名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.StoreLogoUrl">
            <summary>
            机构的Logo url
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.Remark">
            <summary>
            机构的备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.Email">
            <summary>
            机构的电子邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.ManagerId">
            <summary>
            机构的系统管理员Id 详见 <see cref="T:EasyIotSharp.Core.Domain.TenantAccount.Soldier"/>
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.VersionTypeId">
            <summary>
            版本类型，详见 <see cref="T:Elasticsearch.Net.VersionType"/>
            1=入门版
            2=基础版
            3=旗舰版
            5=全国版
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.IsFreeze">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Domain.Tenant.Tenant.FreezeDes">
            <summary>
            冻结描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.Params.UploadImageInput.ImgFile">
            <summary>
            图片文件上传
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Common.ProvinceDto">
            <summary>
            静态省份数据dto
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.ProvinceDto.Code">
            <summary>
            省份国标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.ProvinceDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.ProvinceDto.FriendlyName">
            <summary>
            友好名称（带省市）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.ProvinceDto.Letter">
            <summary>
            首字母
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.ProvinceDto.IsNewGaoKao">
            <summary>
            是否为新高考
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Common.ProvinceDto.NumId">
            <summary>
            老的省份id
            <remarks>
            老的省份id,仅供过渡使用,所有新业务请使用code
            </remarks>
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.DeleteAdminInput">
            <summary>
            删除输入参数
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.DeleteAdminInput.Id">
            <summary>
            对象id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.DeleteInput">
            <summary>
            删除输入参数
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.DeleteInput.Id">
            <summary>
            对象id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.DeleteProtocolInput">
            <summary>
            通过id删除一条协议信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.DeleteProtocolInput.Id">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.DeleteProtocolInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorInput">
            <summary>
            通过id删除一条传感器的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorInput.Id">
            <summary>
            传感器id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorQuotaInput">
            <summary>
            通过id删除一条传感器类型指标的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorQuotaInput.Id">
            <summary>
            传感器指标id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorQuotaInput.IsDelete">
            <summary>
            是否删除 
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolInput">
            <summary>
            添加一条协议信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolInput.Name">
            <summary>
            协议名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolInput.Remark">
            <summary>
            协议描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput">
            <summary>
            添加一条传感器的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput.Name">
            <summary>
            测点类型名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput.BriefName">
            <summary>
            简称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput.Supplier">
            <summary>
            厂家名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput.SensorModel">
            <summary>
            传感器型号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput">
            <summary>
            添加一条传感器类型指标的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.SensorId">
            <summary>
            传感器id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.Name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.Identifier">
            <summary>
            指标标识符
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.ControlsType">
            <summary>
            操作类型
            R=只读
            W=只写
            RW=读写
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.DataType">
            <summary>
            <see cref="T:EasyIotSharp.Core.DataTypeMenu"/>
            数据类型
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.Precision">
            <summary>
            小数位精度
            数据类型是double float  小数点取几位
            -1=全部
            0=零位
            1=一位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput.Sort">
            <summary>
            排序字段
            (数字越大越靠前)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolInput">
            <summary>
            通过条件分页查询协议列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolInput.Keyword">
            <summary>
            协议名称/描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolInput.IsEnable">
            <summary>
            是否启用
            -1=不参与查询
            1=启用
            2=禁用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolInput.IsPage">
            <summary>
            是否分页
            true=分页
            false=查询全部
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorInput">
            <summary>
            通过条件分页查询传感器的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorInput.Keyword">
            <summary>
            名称/简称/厂家
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorInput.IsPage">
            <summary>
            是否分页
            true=分页
            false=查询全部
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorQuotaInput">
            <summary>
            根据条件分页查询传感器类型指标列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorQuotaInput.SensorPointTypeId">
            <summary>
            传感器类型id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorQuotaInput.Keyword">
            <summary>
            指标名称/标识符
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorQuotaInput.DataType">
            <summary>
            <see cref="T:EasyIotSharp.Core.DataTypeMenu"/>
            数据类型
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput">
            <summary>
            通过id修改一条协议信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput.Id">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput.Name">
            <summary>
            协议名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput.Remark">
            <summary>
            协议描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput">
            <summary>
            通过id修改一条传感器的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput.Id">
            <summary>
            测点类型id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput.Name">
            <summary>
            测点类型名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput.BriefName">
            <summary>
            简称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput.Supplier">
            <summary>
            厂家名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput.SensorModel">
            <summary>
            传感器型号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput">
            <summary>
            通过id修改一条传感器类型指标的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.SensorPointTypeId">
            <summary>
            测点类型id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Identifier">
            <summary>
            指标标识符
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.ControlsType">
            <summary>
            操作类型
            R=只读
            W=只写
            RW=读写
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.DataType">
            <summary>
            <see cref="T:EasyIotSharp.Core.DataTypeMenu"/>
            数据类型
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Precision">
            <summary>
            小数位精度
            数据类型是double float  小数点取几位
            -1=全部
            0=零位
            1=一位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput.Sort">
            <summary>
            排序字段
            (数字越大越靠前)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.ProtocolDto">
            <summary>
            代表一条协议信息的"DTO"
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.Id">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.Name">
            <summary>
            协议名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.Remark">
            <summary>
            协议描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.ProtocolDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.SensorDto">
            <summary>
            代表一条传感器的"DTO"
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.Name">
            <summary>
            测点类型名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.BriefName">
            <summary>
            简称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.Supplier">
            <summary>
            厂家名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.SensorModel">
            <summary>
            传感器型号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto">
            <summary>
            代表一个传感器类型的指标的"DTO"
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.SensorId">
            <summary>
            测点类型id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Name">
            <summary>
            指标名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Identifier">
            <summary>
            指标标识符
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.ControlsType">
            <summary>
            操作类型
            R=只读
            W=只写
            RW=读写
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.DataType">
            <summary>
            <see cref="T:EasyIotSharp.Core.DataTypeMenu"/>
            数据类型
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Unit">
            <summary>
            单位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Precision">
            <summary>
            小数位精度
            数据类型是double float  小数点取几位
            -1=全部
            0=零位
            1=一位
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.Sort">
            <summary>
            排序字段
            (数字越大越靠前)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Hardware.SensorQuotaDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.OperateUserInput">
            <summary>
            操作用户信息输入
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.OperateUserInput.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.OperateUserInput.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.PagingInput">
            <summary>
            分页基类 其他需分页类的Input须集成该类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.PagingInput.PageIndex">
            <summary>
            当前开始页
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.PagingInput.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.PagingInput.IsPage">
            <summary>
            是否分页
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.ClassificationDto">
            <summary>
            代表一条项目分类的“DTO”
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.Id">
            <summary>
            项目分类Id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.Name">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.Sort">
            <summary>
            排序字段
            字段越大越靠前
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ClassificationDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.DeviceDto">
            <summary>
            代表一条设备信息的“DTO”
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.Id">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.Name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.State">
            <summary>
            设备状态
            0=初始化
            1=在线
            2=离线
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.DeviceDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.DeleteClassificationInput">
            <summary>
            通过id删除一条项目分类的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteClassificationInput.Id">
            <summary>
            项目分类id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.DeleteDeviceInput">
            <summary>
            通过id删除一条设备信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteDeviceInput.Id">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteDeviceInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.DeleteProjectBaseInput">
            <summary>
            通过项目id删除一条项目信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteProjectBaseInput.Id">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteProjectBaseInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.DeleteSensorPointInput">
            <summary>
            通过id删除一条测点信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteSensorPointInput.Id">
            <summary>
            测点id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.DeleteSensorPointInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.InsertClassificationInput">
            <summary>
            添加一条项目分类的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertClassificationInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertClassificationInput.Name">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertClassificationInput.Sort">
            <summary>
            排序字段
            字段越大越靠前
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.InsertDeviceInput">
            <summary>
            添加一条设备信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertDeviceInput.Name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertDeviceInput.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertDeviceInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput">
            <summary>
            添加一个项目信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput.Name">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput.latitude">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput.Address">
            <summary>
            项目地址
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput.Remark">
            <summary>
            项目描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput">
            <summary>
            添加一条测点信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput.Name">
            <summary>
            测点名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput.ClassificationId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput.DeviceId">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput.SensorId">
            <summary>
            传感器Id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.QueryClassificationInput">
            <summary>
            通过条件分页查询项目分类列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryClassificationInput.ProjectId">
            <summary>
            项目Id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryClassificationInput.IsPage">
            <summary>
            是否分页
            true=分页
            false=查询全部
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.QueryDeviceInput">
            <summary>
            通过条件分页查询设备列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryDeviceInput.Keyword">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryDeviceInput.State">
            <summary>
            设备状态
            -1=全部
            0=初始化
            1=在线
            2=离线
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryDeviceInput.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryDeviceInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput">
            <summary>
            分页查询项目信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput.Keyword">
            <summary>
            项目名称/备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput.State">
            <summary>
            项目状态
            -1=查询全部
            0=初始化状态
            1=正在运行状态
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput.CreateStartTime">
            <summary>
            创建开始时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput.CreateEndTime">
            <summary>
            创建结束时间
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput">
            <summary>
            通过条件查询查询测点信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput.Keyword">
            <summary>
            测点名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput.ClassificationId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput.DeviceId">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput.SensorId">
            <summary>
            传感器Id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.UpdateClassificationInput">
            <summary>
            通过id修改一条项目分类的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateClassificationInput.Id">
            <summary>
            项目分类id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateClassificationInput.Name">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateClassificationInput.Sort">
            <summary>
            排序字段
            字段越大越靠前
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput">
            <summary>
            根据id修改一条设备信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput.Id">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput.Name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput.State">
            <summary>
            设备状态
            0=初始化
            1=在线
            2=离线
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput.ProtocolId">
            <summary>
            协议id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput">
            <summary>
            通过id修改一条项目信息
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput.Id">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput.Name">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput.latitude">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput.Address">
            <summary>
            项目地址
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput.Remark">
            <summary>
            项目描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput">
            <summary>
            根据id修改一条测点信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput.Id">
            <summary>
            测点id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput.Name">
            <summary>
            测点名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput.ClassificationId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput.DeviceId">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput.SensorId">
            <summary>
            传感器Id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.Params.UpdateStateProjectBaseInput">
            <summary>
            通过id修改一条项目信息的状态的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateStateProjectBaseInput.Id">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.Params.UpdateStateProjectBaseInput.State">
            <summary>
            项目状态
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.Name">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.Longitude">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.latitude">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.State">
            <summary>
            项目状态
            0=初始化状态
            1=正在运行状态
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.Address">
            <summary>
            项目地址
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.Remark">
            <summary>
            项目描述
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.ProjectBaseDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Project.SensorPointDto">
            <summary>
            代表一条测点信息的"DTO"
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.Id">
            <summary>
            测点id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.Name">
            <summary>
            测点名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.ProjectId">
            <summary>
            项目id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.ClassificationId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.DeviceId">
            <summary>
            设备id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.SensoId">
            <summary>
            传感器Id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Project.SensorPointDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.MenuDto">
            <summary>
            代表一条菜单的“DTO”
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.ParentId">
            <summary>
            父级id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.Type">
            <summary>
            类型
            1=菜单
            2=路由
            3=按钮
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.Sort">
            <summary>
            排序
            (数字越大越靠前）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.ParentId">
            <summary>
            父级id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.Type">
            <summary>
            类型
            1=菜单
            2=路由
            3=按钮
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.Sort">
            <summary>
            排序字段
            数字越大越靠前
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.MenuTreeDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteMenuInput">
            <summary>
            通过id删除一条菜单信息
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteMenuInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteMenuInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteRoleInput">
            <summary>
            通过id删除一条角色信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteRoleInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteRoleInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteSoldierInput">
            <summary>
            通过id删除一条用户信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteSoldierInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteSoldierInput.IsDelete">
            <summary>
            是否删除 
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput">
            <summary>
            通过id查询一条角色菜单信息的出参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.Id">
            <summary>
            角色id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.GetRoleMenuOutput.Menus">
            <summary>
            菜单信息
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminRoleInput">
            <summary>
            创建租户添加一个租户管理员角色的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminRoleInput.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminRoleInput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput">
            <summary>
            创建租户添加系统管理员的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput.IsTest">
            <summary>
            是否测试
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput.Sex">
            <summary>
            姓别：1=男，2=女，-1 = 不选
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput">
            <summary>
            添加一条菜单信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.ParentId">
            <summary>
            父级id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.Type">
            <summary>
            类型
            1=菜单
            2=路由
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.Sort">
            <summary>
            排序字段
            数字越大越靠前
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput">
            <summary>
            添加一条角色信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput.Menus">
            <summary>
            子集菜单id集合
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput">
            <summary>
            添加一条用户信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.IsTest">
            <summary>
            是否测试
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.Sex">
            <summary>
            姓别：1=男，2=女，-1 = 不选
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuBySoldierIdOutput">
            <summary>
            通过用户id查询对应菜单列表的出参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuBySoldierIdOutput.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuBySoldierIdOutput.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuBySoldierIdOutput.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuBySoldierIdOutput.Type">
            <summary>
            类型
            1=菜单
            2=路由
            3=按钮
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuBySoldierIdOutput.Children">
            <summary>
            子类菜单
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ChildrenMenu.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ChildrenMenu.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ChildrenMenu.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ChildrenMenu.Type">
            <summary>
            类型
            1=菜单
            2=路由
            3=按钮
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ChildrenMenu.Children">
            <summary>
            子类菜单
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuInput.Keyword">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuInput.IsEnable">
            <summary>
            是否启用
            -1=不参与查询
            1=启用
            2=禁用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryRoleInput">
            <summary>
            通过条件查询角色列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryRoleInput.Keyword">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryRoleInput.IsEnable">
            <summary>
            是否启用
            -1=不参与查询
            1=启用
            2=禁用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.QuerySoldierInput">
            <summary>
            通过条件分页查询用户列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QuerySoldierInput.Keyword">
            <summary>
            手机号/用户名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QuerySoldierInput.IsEnable">
            <summary>
            是否启用
            -1=不参与查询
            1=启用
            2=禁用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryUrlMenuByParentUrlInput">
            <summary>
            通过父级Url查询按钮路由的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.QueryUrlMenuByParentUrlInput.Url">
            <summary>
            父级
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableMenuInput">
            <summary>
            通过id修改一条菜单信息的是否启用状态的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableMenuInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableMenuInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableRoleInput">
            <summary>
            通过id修改一条角色信息的是否启用状态的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableRoleInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableRoleInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput">
            <summary>
            通过id修改一条菜单信息
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.Icon">
            <summary>
            菜单图标
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.Url">
            <summary>
            菜单路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.Sort">
            <summary>
            排序字段
            数字越大越靠前
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput">
            <summary>
            通过id修改一个角色信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput.Id">
            <summary>
            角色id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput.IsUpdateMenu">
            <summary>
            是否修改菜单
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput.Menus">
            <summary>
            子集菜单id集合
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput">
            <summary>
            通过id修改一条用户信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.Sex">
            <summary>
            姓别：1=男，2=女，-1 = 不选
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.IsUpdateRole">
            <summary>
            是否修改角色
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierIsEnableInput">
            <summary>
            根据id修改用户的是否启用状态的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierIsEnableInput.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierIsEnableInput.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierRoleInput">
            <summary>
            通过用户id修改对应的角色的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierRoleInput.SoldierId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierRoleInput.Roles">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierInput">
            <summary>
            用户登录验证的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierInput.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierOutput">
            <summary>
            用户验证登录的出参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierOutput.Status">
            <summary>
            验证状态
            1=成功
            2=用户名或密码有误
            3=账号已禁用
            21=租户不存在
            22=租户已被删除
            23=租户已被冻结
            24=租户已过期
            51=登录失败次数过多，账号锁定30分钟
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierOutput.Token">
            <summary>
            验证成功后返回的Token信息（包括过期时间）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierOutput.Solider">
            <summary>
            获取的用户信息
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierOutput.Tenant">
            <summary>
            获取的租户信息
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus">
            <summary>
            验证状态
            1=成功
            2=用户名或密码有误
            3=账号已禁用
            21=租户不存在
            22=租户已被删除
            23=租户已被冻结
            24=租户已过期
            51=登录失败次数过多，账号锁定30分钟
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.InvalidNameOrPassword">
            <summary>
            用户名或密码有误
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.SoldiersIsDisable">
            <summary>
            账号已禁用
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.TenantIsNotExists">
            <summary>
            租户不存在
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.TenantIsDeleted">
            <summary>
            租户已被删除
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.TenantIsFreeze">
            <summary>
            租户已被冻结
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.TenantIsExpired">
            <summary>
            租户已过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierStatus.SoldiersLock">
            <summary>
            登录失败次数过多，账号锁定30分钟
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.RoleDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.TenantNumId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.IsSuperAdmin">
            <summary>
            是否admin(超级管理员，没有租户限制)
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.IsManager">
            <summary>
            是否管理员
            1=管理员
            2=普通用户
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.IsTest">
            <summary>
            是否测试
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.Sex">
            <summary>
            姓别：1=男，2=女，-1 = 不选
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.TenantAccount.SoldierDto.LastLoginTime">
            <summary>
            最后一次登录时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.DeleteTenantInput.Id">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.DeleteTenantInput.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.ContractName">
            <summary>
            合同名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.ContractOwnerName">
            <summary>
            合同所属人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.ContractOwnerMobile">
            <summary>
            合同所属人电话
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.ContractStartTime">
            <summary>
            合同开始时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.ContractEndTime">
            <summary>
            合同结束时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.Mobile">
            <summary>
            机构的负责人手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.Owner">
            <summary>
            机构的负责人姓名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.StoreLogoUrl">
            <summary>
            机构的Logo url
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.Remark">
            <summary>
            机构的备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.Email">
            <summary>
            机构的电子邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.VersionTypeId">
            <summary>
            版本类型，详见 <see cref="T:Elasticsearch.Net.VersionType"/>
            1=入门版
            2=基础版
            3=旗舰版
            5=全国版
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.IsFreeze">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput.FreezeDes">
            <summary>
            冻结描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput">
            <summary>
            通过条件分页查询租户列表的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput.Keyword">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput.ExpiredType">
            <summary>
            过期状态
            -1=不参与查询
            0=待授权
            1=生效
            2=已过期
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput.ContractStartTime">
            <summary>
            合同开始时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput.ContractEndTime">
            <summary>
            合同结束时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput.IsFreeze">
            <summary>
            冻结状态
            -1=不参与查询
            1=已冻结
            2=未冻结
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Tenant.Params.UpdateIsFreezeTenantTenantInput">
            <summary>
            通过id修改一个租户的冻结状态得入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateIsFreezeTenantTenantInput.Id">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateIsFreezeTenantTenantInput.IsFreeze">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateIsFreezeTenantTenantInput.FreezeDes">
            <summary>
            冻结描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput">
            <summary>
            通过id修改一个租户信息的入参类
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.Id">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.NumId">
            <summary>
            租户numId
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.StoreKey">
            <summary>
            机构的（唯一的等同Id）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.ContractName">
            <summary>
            合同名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.ContractOwnerName">
            <summary>
            合同所属人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.ContractOwnerMobile">
            <summary>
            合同所属人电话
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.ContractStartTime">
            <summary>
            合同开始时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.ContractEndTime">
            <summary>
            合同结束时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.Mobile">
            <summary>
            机构的负责人手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.StoreLogoUrl">
            <summary>
            机构的Logo url
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.Remark">
            <summary>
            机构的备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.Email">
            <summary>
            机构的电子邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.ManagerId">
            <summary>
            机构的系统管理员Id 详见 <see cref="T:EasyIotSharp.Core.Domain.TenantAccount.Soldier"/>
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.VersionTypeId">
            <summary>
            版本类型，详见 <see cref="T:Elasticsearch.Net.VersionType"/>
            1=入门版
            2=基础版
            3=旗舰版
            5=全国版
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.IsFreeze">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput.FreezeDes">
            <summary>
            冻结描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Tenant.TenantDto">
            <summary>
            代表一个租户实体的“DTO”
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.UpdatedAt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.OperatorId">
            <summary>
            操作人标识
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.OperatorName">
            <summary>
            操作人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.NumId">
            <summary>
            租户numId
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.StoreKey">
            <summary>
            机构的（唯一的等同Id）
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ContractName">
            <summary>
            合同名称
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ContractOwnerName">
            <summary>
            合同所属人
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ContractOwnerMobile">
            <summary>
            合同所属人电话
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ContractStartTime">
            <summary>
            合同开始时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ContractEndTime">
            <summary>
            合同结束时间
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.Mobile">
            <summary>
            机构的负责人手机号
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.Owner">
            <summary>
            机构的负责人姓名
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.StoreLogoUrl">
            <summary>
            机构的Logo url
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.Remark">
            <summary>
            机构的备注
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.Email">
            <summary>
            机构的电子邮箱
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ExpiredType">
            <summary>
            过期状态
            0=待授权
            1=生效
            2=已过期
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.ManagerId">
            <summary>
            机构的系统管理员Id 详见 <see cref="T:EasyIotSharp.Core.Domain.TenantAccount.Soldier"/>
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.VersionTypeId">
            <summary>
            版本类型，详见 <see cref="T:Elasticsearch.Net.VersionType"/>
            1=入门版
            2=基础版
            3=旗舰版
            5=全国版
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.IsFreeze">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Tenant.TenantDto.FreezeDes">
            <summary>
            冻结描述
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenInput">
            <summary>
            获取用户Token入参
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenInput.AppId">
            <summary>
            小程序唯一凭证 appId
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenInput.Secret">
            <summary>
            小程序唯一凭证密钥 appSecret
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenInput.GrantType">
            <summary>
            授权类型
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenInput.UId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenOutput">
            <summary>
            获取用户Token返回参数
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenOutput.Code">
            <summary>
            请求状态码
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenOutput.AccessToken">
            <summary>
            获取到的凭证
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Watchmen.Params.GetUserTokenOutput.ExpiredIn">
            <summary>
            凭证有效时间
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Dto.Users.UserTokenDto">
            <summary>
            用户Token令牌DTO
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Users.UserTokenDto.AccessToken">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Dto.Users.UserTokenDto.ExpirationTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.EasyIotSharpCoreModule.Initialize">
            <summary>
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Extensions.AESHelper">
            <summary>
            AES加密解密
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.AESHelper.Encrypt(System.String,System.String)">
            <summary>
            使用AES加密字符串
            </summary>
            <param name="content">加密内容</param>
            <param name="key">秘钥</param>
            <returns>Base64字符串结果</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.AESHelper.Decrypt(System.String,System.String)">
            <summary>
            使用AES解密字符串
            </summary>
            <param name="content">内容</param>
            <param name="key">秘钥</param>
            <returns>UTF8解密结果</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.ConfigurationExtensions.GetEnvFromArgs(System.String[])">
            <summary>
            从CMD获取当前指定环境的模式
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Extensions.EncryptExtensions">
            <summary>
            加密扩展
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.EncryptExtensions.GetTimeStamp">
            <summary>
            获取时间戳（把当前时间转换为毫秒数）
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            根据集合中指定的列过滤重复
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="source"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Extensions.ExcelRangeBaseExtensions">
            <summary>
            导出Excel拓展
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.ExcelRangeBaseExtensions.LoadFromCollection``1(OfficeOpenXml.ExcelRangeBase,System.Collections.Generic.IEnumerable{``0},System.String[],System.Boolean)">
            <summary>
            从IEnumerable加载数据拓展(定制忽略属性)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="collection"></param>
            <param name="ignorePropertyNames"></param>
            <param name="printHeaders"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.ExcelRangeBaseExtensions.GetExcelColumnName(System.Int32)">
            <summary>
            根据数值获取excel对应的列名（address letter）
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.GetTimeStamp(System.Boolean)">
            <summary>
            获取当前时间戳
            </summary>
            <param name="bflag">为真时获取10位时间戳,为假时获取13位时间戳.bool bflag = true</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.GetTimeStamp(System.DateTime)">
            <summary>
            获取当前时间戳
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.ConvertToDateTime(System.String)">
            <summary>
            Unix时间戳转DateTime
            </summary>
            <param name="timestamp">时间戳</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.ConvertToDic``1(``0)">
            <summary>
            实体转换为字典
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.EncryptMobileNumber(System.String)">
            <summary>
            加密11位手机号
            </summary>
            <param name="mobileNumber">手机号</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.ToObjectId(System.String)">
            <summary>
            String to MongoDb.Bson.ObjectId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.GenerateRadomPassword(System.Int32)">
            <summary>
            在0到10直接随机生成几个数字
            </summary>
            <param name="num">控制几位数字</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.GenerateMobileAuthCode(System.Int32)">
            <summary>
            生成随机的手机验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.AddProperty(System.Object,System.Object)">
            <summary>
            对象添加属性
            </summary>
            <param name="sourceObj"></param>
            <param name="value">属性名称使用类名</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.AddProperty(System.Object,System.String,System.Object)">
            <summary>
            对象添加属性
            </summary>
            <param name="sourceObj"></param>
            <param name="name">指定的属性名称</param>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.Extensions.RemoveProperty(System.Object,System.String)">
            <summary>
            移除指定的属性名称
            </summary>
            <param name="sourceObj"></param>
            <param name="name">属性名称使用类名</param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Extensions.FileStreamExtensions">
            <summary>
            文件流处理扩展
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.FileStreamExtensions.StreamToBytes(System.IO.Stream)">
            <summary>
            Stream 转换 byte[]
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.FileStreamExtensions.UploadUFile(System.Byte[],System.String,System.String)">
            <summary>
            上传文件至UFile
            </summary>
            <param name="buffer"></param>
            <param name="fileName"></param>
            <param name="bucket"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.PostFormData``1(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            请求发送链接
            </summary>
            <param name="url"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.Request``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            http/https请求响应
            </summary>
            <param name="method"></param>
            <param name="url">地址（要带上http或https）</param>
            <param name="headers">请求头</param>
            <param name="parameters">提交数据</param>
            <param name="dataEncoding">编码类型 utf-8</param>
            <param name="contentType">application/x-www-form-urlencoded</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.RequestPost``1(System.String,System.String,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            http/https请求响应
            </summary>
            <param name="url">地址（要带上http或https）</param>
            <param name="headers">请求头</param>
            <param name="json">提交数据</param>
            <param name="dataEncoding">编码类型 utf-8</param>
            <param name="contentType">application/x-www-form-urlencoded</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.RequestPost(System.String,System.String,System.Text.Encoding,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            http/https请求响应
            </summary>
            <param name="url"></param>
            <param name="json"></param>
            <param name="dataEncoding"></param>
            <param name="headers"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.HttpUploadFile``1(System.String,System.Byte[],System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            http上传文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <param name="buffer"></param>
            <param name="paramName"></param>
            <param name="contentType"></param>
            <param name="nameValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.CreateRequest(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding,System.String)">
            <summary>
            创建HTTP请求对象
            </summary>
            <param name="getOrPost"></param>
            <param name="url"></param>
            <param name="headers"></param>
            <param name="parameters"></param>
            <param name="paraEncoding"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.FormatRequestHeaders(System.Collections.Generic.Dictionary{System.String,System.String},System.Net.HttpWebRequest)">
            <summary>
            格式化请求头信息
            </summary>
            <param name="headers"></param>
            <param name="request"></param>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.FormatGetParametersToUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding)">
            <summary>
            格式化Get请求参数
            </summary>
            <param name="url">URL</param>
            <param name="parameters">参数</param>
            <param name="paraEncoding">编码格式</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.FormatPostParameters(System.Collections.Generic.Dictionary{System.String,System.String},System.Text.Encoding,System.String)">
            <summary>
            格式化Post请求参数
            </summary>
            <param name="parameters">编码格式</param>
            <param name="dataEncoding">编码格式</param>
            <param name="contentType">类型</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.GetResponseStringJson(System.Net.HttpWebResponse)">
            <summary>
             获取响应的json数据
            </summary>
            <param name="httpResponse"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.HttpClientExtensions.ReadFully(System.IO.Stream)">
            <summary>
            数据流转byte数组
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.MatchExtensions.MatchPhoneNumber(System.String,System.Boolean@)">
            <summary>
            匹配手机号码
            </summary>
            <param name="s">源字符串</param>
            <param name="isMatch">是否匹配成功，若返回true，则会得到一个Match对象，否则为null</param>
            <returns>匹配对象</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.MatchExtensions.MatchPhoneNumber(System.String)">
            <summary>
            匹配手机号码
            </summary>
            <param name="s">源字符串</param>
            <returns>是否匹配成功</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.ReplaceCharsByEmpty(System.String)">
            <summary>
             去掉字符串中的特殊字符
            </summary>
            <param name="chars"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.ConvertEncodeBase64(System.String)">
            <summary>
            Base64加密，采用utf8编码方式加密
            </summary>
            <param name="source">待加密的明文</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.GetMd5(System.String)">
            <summary>
            MD5　32位加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.GetUtf8(System.String)">
            <summary>
            转换格式
            </summary>
            <param name="unicodeString"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.IsLetter(System.String,System.String)">
            <summary>
            是否为字母
            </summary>
            <param name="content"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.GetShortUrl(System.String)">
            <summary>
            长链接转短链接，用于发送带链接的短信，邮件等
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.StringExtensions.DesensitizationTreatment(System.String)">
            <summary>
            手机号脱敏
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.TokenExtensions.GetUserTokenIdentifier(System.Security.Principal.IIdentity)">
            <summary>
            获取Token用户身份对象
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Extensions.TokenExtensions.GenerateToken(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            生成 JWT Token
            </summary>
            <param name="userId">用户 ID</param>
            <param name="userName">用户名称</param>
            <param name="tenantId">租户 ID</param>
            <param name="expireMinutes">过期时间（分钟）默认七天</param>
            <returns>生成的 Token</returns>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts">
            <summary>
            全局的常量
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.ESSettings">
            <summary>
            es 默认setting
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.ESSettings.TIEBREAKER">
            <summary>
            es 评分系数
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.ESSettings.MAXRESULTWINDOW">
            <summary>
            ES默认最大返回数量
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.ESSettings.DEFAULT">
            <summary>
            ES默认最大返回数量
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.TaskLog">
            <summary>任务日志相关定义</summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.TaskLog.Module">
            <summary>
            模块名称定义
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.TaskLog.Template">
            <summary>任务日志模板定义</summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.TaskLog.Status">
            <summary>任务日志模板状态定义</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.TaskLog.Status.SUCCESS">
            <summary>成功</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.TaskLog.Status.FAIL">
            <summary>失败</summary>
        </member>
        <member name="M:EasyIotSharp.Core.GlobalConsts.TaskLog.Status.GetStatusValue(System.Boolean)">
            <summary> 状态值 </summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.CacheStrategy">
            <summary>
            缓存过期时间策略定义
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.ONE_DAY">
            <summary>
            一天过期24小时
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.HALF_DAY">
            <summary>
            12小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.EIGHT_HOURS">
            <summary>
            8小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.FIVE_HOURS">
            <summary>
            5小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.THREE_HOURS">
            <summary>
            3小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.TWO_HOURS">
            <summary>
            2小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.ONE_HOURS">
            <summary>
            1小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.HALF_HOURS">
            <summary>
            半小时过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.TEN_MINUTES">
            <summary>
            10分钟过期
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.CacheStrategy.NEVER">
            <summary>
            永不过期
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.PageSizeNums">
            <summary>分页查询页大小定义</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._4">
            <summary>页大小</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._5">
            <summary>页大小</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._10">
            <summary>每页10条</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._20">
            <summary>每页20条</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._50">
            <summary>每页50条</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._100">
            <summary>每页100条</summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.PageSizeNums._1000">
            <summary>每页1000条</summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.AES_KEY">
            <summary>
            AES_KEY
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.GlobalConsts.KnowHttpMethods">
            <summary>
            定义http请求方式
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.KnowHttpMethods.POST">
            <summary>
            POST
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.GlobalConsts.KnowHttpMethods.GET">
            <summary>
            GET
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.DataTypeMenu">
            <summary>
            数据类型
            -1=全部
            1=string
            2=int
            3=double
            4=float
            5=bool
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.DataTypeMenu.None">
            <summary>
            全部(未知的)
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.DataTypeMenu.String">
            <summary>
            string
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.DataTypeMenu.Int">
            <summary>
            int
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.DataTypeMenu.Double">
            <summary>
            double
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.DataTypeMenu.Float">
            <summary>
            float
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.DataTypeMenu.Bool">
            <summary>
            bool
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.TagTypeMenu">
            <summary>
            表单标签类型
            -1=全部
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.TagTypeMenu.None">
            <summary>
            全部(未知的)
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Queue.IKafkaService">
            <summary>
            Kafka 消息中间件服务，处理消息的发送与订阅
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Queue.IKafkaService.PublishAsync``1(System.String,``0)">
            <summary>
            发送消息至指定主题
            </summary>
            <typeparam name="TMessage"></typeparam>
            <param name="topicName"></param>
            <param name="message">message value</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Queue.IKafkaService.Subscribe``1(System.String,System.Action{``0},System.Threading.CancellationToken,System.Int32)">
            <summary>
            从指定的主题订阅消息
            </summary>
            <param name="topicName"></param>
            <param name="messageFunc">消费的回调函数</param>
            <param name="cancellationToken">线程取消通知</param>
            <param name="delay">延迟</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Queue.IKafkaService.Subscribe``1(System.String,System.Action{System.Collections.Generic.IList{``0}},System.Threading.CancellationToken,System.Int32)">
            <summary>
            从指定的主题订阅消息，并在达到一定条数时才触发回调函数
            </summary>
            <param name="topicName"></param>
            <param name="messageFunc">消费的回调函数</param>
            <param name="cancellationToken">线程取消通知</param>
            <param name="threshold">达到触发回调函数的消息数阈值</param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Queue.IPipelineService">
            <summary>
            管道服务：所有使用消息中间件的业务都在这里注册使用
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.Queue.QueueConsts.KAFKA_SUBSCRIBE">
             <summary>
            
             </summary>
        </member>
        <member name="T:EasyIotSharp.Core.RegexExpressions">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.OBJECT_ID">
            <summary>
            ObjectId
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.NUMBER">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.NUMBER_OR_EMPTY">
            <summary>
            正整数或空字符串
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.OBJECT_ID_OR_EMPTY">
            <summary>
            ObjectId或空字符串
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.LETTER_NUMBER">
            <summary>
            数字和字母
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.PROVINCE_CODE">
            <summary>
            省份代码
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.COLLEGE_CODE">
            <summary>
            院校代码
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.URL">
            <summary>
            Url地址 TODO 此正则需调整
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.NON_SPECIALCHAR">
            <summary>
            非特殊字符
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.PHONE">
            <summary>
            电话
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.VERSIONTYPE">
            <summary>
            机构版本
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.DATETIME">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.EMAIL">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.MOBILE">
            <summary>
            手机号
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.ONE_OR_TWO">
            <summary>
            1 or 2
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.ZERO_OR_ONE">
            <summary>
            0 or 1
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.CERTIFICATENO">
            <summary>
            身份证
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.NUMBE_RANGE_ONE_THREE">
            <summary>
            1-3
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.NUMBE_RANGE_THREE_FOUR">
            <summary>
            3 or 4
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.NON_ZERO_POSITIVE_INTEGER">
            <summary>
            只能是非零的正整数
            </summary>
        </member>
        <member name="F:EasyIotSharp.Core.RegexExpressions.BOOL_TRUE_FALSE">
            <summary>
            true or false
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Hardware.IProtocolRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询项目分类列表
            </summary>
            <param name="isEnable">是否启用 -1=不参与查询 1=启用  2=禁用</param>
            <param name="keyword">协议名称/描述</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <param name="isPage">是否分页</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Hardware.ISensorQuotaRepository.Query(System.Int32,System.String,System.String,EasyIotSharp.Core.DataTypeMenu,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询传感器指标列表
            </summary>
            <param name="tenantNumId">租户NumId</param>
            <param name="sensorId">传感器类型id</param>
            <param name="keyword">名称/标识符</param>
            <param name="dataType">数据类型  -1=全部 1=string 2=int 3=double 4=float 5=bool </param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <param name="isPage">是否分页</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Hardware.ISensorRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询传感器列表
            </summary>
            <param name="tenantNumId">租户NumId</param>
            <param name="keyword">名称/简称/厂家</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <param name="isPage">是否分页</param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TPrimaryKey"></typeparam>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.InsertAsync(`0)">
            <summary>
            添加实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.InserManyAsync(System.Collections.Generic.List{`0})">
            <summary>
            批量添加实体
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.DeleteByIdAsync(System.Object)">
            <summary>
            根据主键删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.DeleteAsync(`0)">
            <summary>
            删除实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.UpdateAsync(`0)">
            <summary>
            更新实体
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.GetByIdAsync(System.Object)">
            <summary>
            查询实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.GetAllAsync">
            <summary>
            查询所有实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.GetAll">
            <summary>
            查询所有实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件查询第一个实体，如果没有则返回默认值
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.AnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件查询是否存在符合条件的实体
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.CountAsync">
            <summary>
            获取实体的总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件获取实体的总数
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.GetListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件查询实体列表
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Mysql.IMySqlRepositoryBase`2.GetPagedListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            分页查询实体列表
            </summary>
            <param name="predicate"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Project.IClassificationRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询项目分类列表
            </summary>
            <param name="tenantNumId">租户NumId</param>
            <param name="projectId">项目id</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <param name="isPage">是否分页</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Project.IDeviceRepository.Query(System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            通过条件分页查询设备列表
            </summary>
            <param name="tenantNumId">租户NumId</param>
            <param name="Keyword">设备名称</param>
            <param name="state">设备状态 -1=不参与查询  0=初始化  1=在线  2=离线</param>
            <param name="protocolId">协议id</param>
            <param name="projectId">设备id</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Project.IProjectBaseRepository.Query(System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            通过条件分页查询项目列表
            </summary>
            <param name="tenantNumId">租户NumId</param>
            <param name="keyword">项目名称/备注</param>
            <param name="state">状态 -1=全部  0=初始化状态  1=正在运行状态</param>
            <param name="createStartTime">创建开始时间</param>
            <param name="createEndTime">创建结束时间</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Project.ISensorPointRepository.Query(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询项目分类列表
            </summary>
            <param name="tenantNumId">租户numId</param>
            <param name="keyword">测点名称</param>
            <param name="projectId">项目id</param>
            <param name="classificationId">分类id</param>
            <param name="deviceId">设备id</param>
            <param name="sensorId">传感器id</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <param name="isPage">是否分页</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IMenuRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询菜单列表
            </summary>
            <param name="isSugerAdmin">-1=不参与查询  1=true  2=false</param>
            <param name="keyword"></param>
            <param name="isEnable">-1=不参与查询  1=启用  2=禁用</param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="isPage"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IMenuRepository.QueryByIds(System.Collections.Generic.List{System.String})">
            <summary>
            通过id集合获取菜单列表
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IMenuRepository.BuildMenuTree(System.Collections.Generic.List{EasyIotSharp.Core.Dto.TenantAccount.MenuDto})">
            <summary>
            通过父级id创建Tree
            </summary>
            <param name="menuList"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.MenuRepository.#ctor(EasyIotSharp.Repositories.Mysql.SqlSugarDatabaseProvider)">
            <summary>
            构造函数
            </summary>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.MenuRepository.QueryByIds(System.Collections.Generic.List{System.String})">
            <summary>
            根据ID集合查询菜单
            </summary>
            <param name="ids">菜单ID集合</param>
            <returns>返回菜单列表</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.MenuRepository.BuildMenuTree(System.Collections.Generic.List{EasyIotSharp.Core.Dto.TenantAccount.MenuDto})">
            <summary>
            构建菜单树形结构
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.MenuRepository.GetChildren(System.String,System.Collections.Generic.List{EasyIotSharp.Core.Dto.TenantAccount.MenuDto})">
            <summary>
            递归获取子菜单
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.RoleMenuRepository.#ctor(EasyIotSharp.Repositories.Mysql.SqlSugarDatabaseProvider)">
            <summary>
            构造函数
            </summary>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.RoleMenuRepository.QueryByRoleIds(System.Collections.Generic.List{System.String})">
            <summary>
            根据角色ID集合查询角色菜单关系
            </summary>
            <param name="roleIds">角色ID集合</param>
            <returns>返回角色菜单关系列表</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.RoleMenuRepository.DeleteManyByRoleId(System.String)">
            <summary>
            根据角色ID删除角色菜单关系
            </summary>
            <param name="roleId">角色ID</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.RoleRepository.#ctor(EasyIotSharp.Repositories.Mysql.SqlSugarDatabaseProvider)">
            <summary>
            构造函数
            </summary>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.RoleRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            分页查询角色列表
            </summary>
            <param name="tenantNumId">租户编号（大于0时参与查询）</param>
            <param name="keyword">关键字（模糊匹配角色名称）</param>
            <param name="isEnable">是否启用（-1=不参与查询，0=禁用，1=启用）</param>
            <param name="pageIndex">当前页码</param>
            <param name="pageSize">每页记录数</param>
            <returns>返回总记录数和分页数据</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.RoleRepository.QueryByIds(System.Collections.Generic.List{System.String})">
            <summary>
            根据ID集合查询菜单
            </summary>
            <param name="ids">菜单ID集合</param>
            <returns>返回菜单列表</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.SoldierRepository.#ctor(EasyIotSharp.Repositories.Mysql.SqlSugarDatabaseProvider)">
            <summary>
            构造函数
            </summary>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.SoldierRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            分页查询用户列表
            </summary>
            <param name="tenantNumId">租户编号（大于0时参与查询）</param>
            <param name="keyword">关键字（模糊匹配用户名或手机号）</param>
            <param name="isEnable">是否启用（-1=不参与查询，0=禁用，1=启用）</param>
            <param name="pageIndex">当前页码</param>
            <param name="pageSize">每页记录数</param>
            <returns>返回总记录数和分页数据</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.SoldierRoleRepository.#ctor(EasyIotSharp.Repositories.Mysql.SqlSugarDatabaseProvider)">
            <summary>
            构造函数
            </summary>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.SoldierRoleRepository.QueryBySoldierId(System.String)">
            <summary>
            根据用户ID查询用户角色关系
            </summary>
            <param name="soldierId">用户ID</param>
            <returns>返回用户角色关系列表</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.Impl.SoldierRoleRepository.DeleteManyBySoldierId(System.String)">
            <summary>
            根据用户ID删除用户角色关系
            </summary>
            <param name="soldierId">用户ID</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IRoleMenuRepository.QueryByRoleIds(System.Collections.Generic.List{System.String})">
            <summary>
            通过角色id集合获取角色菜单列表
            </summary>
            <param name="roleIds"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IRoleMenuRepository.DeleteManyByRoleId(System.String)">
            <summary>
            通过角色id批量删除角色菜单信息
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IRoleRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            通过条件分页查询角色列表
            </summary>
            <param name="tenantNumId">租户numId</param>
            <param name="keyword">名字</param>
            <param name="isEnable">是否启用 -1=不参与查询  1=启用 2=禁用</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条数据</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.IRoleRepository.QueryByIds(System.Collections.Generic.List{System.String})">
            <summary>
            通过id集合获取角色列表
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.ISoldierRepository.Query(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            通过条件分页查询用户列表
            </summary>
            <param name="tenantNumId">租户id</param>
            <param name="keyword">姓名/手机号</param>
            <param name="isEnable">是否启用 -1=不参与查询 1=启用 2=禁用</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.ISoldierRoleRepository.QueryBySoldierId(System.String)">
            <summary>
            通过用户id查询用户角色列表
            </summary>
            <param name="soldierId"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.ISoldierRoleRepository.QueryBySoldierIds(System.Collections.Generic.List{System.String})">
            <summary>
            通过用户id集合查询用户角色列表
            </summary>
            <param name="soldierIds"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.TenantAccount.ISoldierRoleRepository.DeleteManyBySoldierId(System.String)">
            <summary>
            通过用户id批量删除用户角色信息
            </summary>
            <param name="soldierId"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Repositories.Tenant.ITenantRepository">
            <summary>
            租户仓储接口类
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Repositories.Tenant.ITenantRepository.Query(System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32)">
            <summary>
            通过条件分页查询租户列表
            </summary>
            <param name="keyword">租户名称</param>
            <param name="expiredType">-1=不参与查询 0=待授权 1=生效 2=已过期</param>
            <param name="contractStartTime">合同开始日期</param>
            <param name="contractEndTime">合同结束日期</param>
            <param name="isFreeze">-1=不参与查询 1=已冻结 2=未冻结</param>
            <param name="pageIndex">起始页</param>
            <param name="pageSize">每页多少条</param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Services.APIProvider.IWatchmenAPIService">
            <summary>
            Watchmen服务
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Services.APIProvider.IWatchmenAPIService.GetUserToken(System.String)">
             <summary>
            根据用户Id从Watchmen获取用户token
             </summary>
             <param name="uid"></param>
             <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Cache.Admin.ICacheAdminService.ClearAll">
            <summary>
            清除项目所有缓存
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Services.Common.ICommonService">
            <summary>
            UFile服务
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.ICommonService.UploadImage(EasyIotSharp.Core.Dto.Common.Params.UploadImageInput)">
            <summary>
            图片文件上传
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:EasyIotSharp.Core.Services.Common.Impl.ProvinceService.ProvinceList">
            <summary>
            省份
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.Impl.ProvinceService.GetByCode(System.String)">
            <summary>
            通过代号获取省份信息
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.Impl.ProvinceService.GetByCodes(System.Collections.Generic.IList{System.String})">
            <summary>
            通过代号获取省份信息
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.Impl.ProvinceService.GetByNunId(System.Int32)">
            <summary>
            通过代号获取省份信息
            </summary>
            <param name="numId"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.Impl.ProvinceService.GetByName(System.String)">
            <summary>
            通过省份名称获取省份信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.Impl.ProvinceService.QueryAll">
            <summary>
            获取所有省份列表（静态的）
            </summary>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Services.Common.IProvinceService">
            <summary>
            地区的省份服务，提供静态的省份的处理业务
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.IProvinceService.GetByCode(System.String)">
            <summary>
            通过国标获取省份
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.IProvinceService.GetByCodes(System.Collections.Generic.IList{System.String})">
             <summary>
            
             </summary>
             <param name="codes"></param>
             <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.IProvinceService.GetByName(System.String)">
            <summary>
            通过省份名称获取省份信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Common.IProvinceService.QueryAll">
            <summary>
            获取所有省份列表（静态的）
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.IProtocolService.GetProtocol(System.String)">
            <summary>
            通过id获取一条协议信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.IProtocolService.QueryProtocol(EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolInput)">
            <summary>
            根据条件分页查询协议列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.IProtocolService.InsertProtocol(EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolInput)">
            <summary>
            添加一条协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.IProtocolService.UpdateProtocol(EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput)">
            <summary>
            通过id修改一条协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.IProtocolService.DeleteProtocol(EasyIotSharp.Core.Dto.Hardware.Params.DeleteProtocolInput)">
            <summary>
            通过id删除一条协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorQuotaService.GetSensorQuota(System.String)">
            <summary>
            通过id获取一条传感器类型指标
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorQuotaService.QuerySensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorQuotaInput)">
            <summary>
            根据条件分页查询传感器类型指标列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorQuotaService.InsertSensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput)">
            <summary>
            添加一条传感器类型指标
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorQuotaService.UpdateSensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput)">
            <summary>
            通过id修改一条传感器类型指标
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorQuotaService.DeleteSensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorQuotaInput)">
            <summary>
            通过id删除一条传感器类型指标
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorService.GetSensor(System.String)">
            <summary>
            通过id获取一条传感器类型
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorService.QuerySensor(EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorInput)">
            <summary>
            根据条件分页查询传感器类型列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorService.InsertSensor(EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput)">
            <summary>
            添加一条传感器类型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorService.UpdateSensor(EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput)">
            <summary>
            通过id修改一条传感器类型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Hardware.ISensorService.DeleteSensor(EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorInput)">
            <summary>
            通过id删除一条传感器类型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:EasyIotSharp.Core.Services.IO.Impl.TempFolderService.Path">
            <summary>
            临时文件夹应用绝对路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Services.IO.Impl.TempFolderService.GeneratePdfPath">
            <summary>
            临时文件夹生成Pdf的应用绝对路径
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Services.IO.Impl.TempFolderService.GetFileWithPath(System.String)">
            <summary>
            通过临时文件夹路径获取绝对路径
            </summary>
            <param name="ext">后缀名（如：.txt等）</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.IO.Impl.TempFolderService.DeleteFile(System.String)">
            <summary>
            从临时文件夹删除文件
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="P:EasyIotSharp.Core.Services.IO.ITempFolderService.Path">
            <summary>
            临时文件夹应用绝对路径
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Services.IO.ITempFolderService.GeneratePdfPath">
            <summary>
             临时文件夹导出的Excel应用绝对路径
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Services.IO.ITempFolderService.GetFileWithPath(System.String)">
            <summary>
            通过临时文件夹路径获取绝对路径
            </summary>
            <param name="ext">后缀名（如：.txt）</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.IO.ITempFolderService.DeleteFile(System.String)">
            <summary>
            从临时文件夹删除文件
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IClassificationService.GetClassification(System.String)">
            <summary>
            通过id获取一条项目分类
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IClassificationService.QueryClassification(EasyIotSharp.Core.Dto.Project.Params.QueryClassificationInput)">
            <summary>
            根据条件分页查询项目分类列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IClassificationService.InsertClassification(EasyIotSharp.Core.Dto.Project.Params.InsertClassificationInput)">
            <summary>
            添加一条项目分类
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IClassificationService.UpdateClassification(EasyIotSharp.Core.Dto.Project.Params.UpdateClassificationInput)">
            <summary>
            通过id修改一条项目分类
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IClassificationService.DeleteClassification(EasyIotSharp.Core.Dto.Project.Params.DeleteClassificationInput)">
            <summary>
            通过id删除一条项目分类
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IDeviceService.GetDevice(System.String)">
            <summary>
            通过id获取一条设备信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IDeviceService.QueryDevice(EasyIotSharp.Core.Dto.Project.Params.QueryDeviceInput)">
            <summary>
            根据条件分页查询设备列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IDeviceService.InsertDevice(EasyIotSharp.Core.Dto.Project.Params.InsertDeviceInput)">
            <summary>
            添加一条设备信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IDeviceService.UpdateDevice(EasyIotSharp.Core.Dto.Project.Params.UpdateDeviceInput)">
            <summary>
            通过id修改一条设备信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IDeviceService.DeleteDevice(EasyIotSharp.Core.Dto.Project.Params.DeleteDeviceInput)">
            <summary>
            通过id删除一条设备信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IProjectBaseService.GetProjectBase(System.String)">
            <summary>
            通过id获取一条项目信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IProjectBaseService.QueryProjectBase(EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput)">
            <summary>
            通过条件分页查询项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IProjectBaseService.InsertProjectBase(EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput)">
            <summary>
            添加一条项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IProjectBaseService.UpdateProjectBase(EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput)">
            <summary>
            通过id修改一条项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IProjectBaseService.UpdateStateProjectBase(EasyIotSharp.Core.Dto.Project.Params.UpdateStateProjectBaseInput)">
            <summary>
            通过id修改一条项目信息的状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.IProjectBaseService.DeleteProjectBase(EasyIotSharp.Core.Dto.Project.Params.DeleteProjectBaseInput)">
            <summary>
            通过id删除一条项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.ISensorPointService.GetSensorPoint(System.String)">
            <summary>
            通过id获取一条测点信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.ISensorPointService.QuerySensorPoint(EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput)">
            <summary>
            根据条件分页查询测点列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.ISensorPointService.InsertSensorPoint(EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput)">
            <summary>
            添加一条测点信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.ISensorPointService.UpdateSensorPoint(EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput)">
            <summary>
            根据id修改一条测点信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Project.ISensorPointService.DeleteSensorPoint(EasyIotSharp.Core.Dto.Project.Params.DeleteSensorPointInput)">
            <summary>
            通过id删除一条测点信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.GetMenu(System.String)">
            <summary>
            通过id获取一条菜单信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.QueryMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuInput)">
            <summary>
            通过id获取一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.QueryMenuBySoldierId(System.Boolean)">
            <summary>
            通过用户id获取用户对应的菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.QueryUrlMenuByParentUrl(EasyIotSharp.Core.Dto.TenantAccount.Params.QueryUrlMenuByParentUrlInput)">
            <summary>
            通过父级url获取按钮级别的url
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.InsertMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput)">
            <summary>
            添加一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.UpdateMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateMenuInput)">
            <summary>
            通过id修改一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.UpdateIsEnableMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableMenuInput)">
            <summary>
            通过id修改一条菜单是否启用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IMenuService.DeleteMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteMenuInput)">
            <summary>
            通过id获取一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.GetRoleMenu(System.String)">
            <summary>
            通过id查询一条角色菜单信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.QueryRole(EasyIotSharp.Core.Dto.TenantAccount.Params.QueryRoleInput)">
            <summary>
            通过条件分页查询角色列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.InsertRole(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput)">
            <summary>
            添加一条角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.InsertAdminRole(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminRoleInput)">
            <summary>
            添加一条管理员角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.UpdateRole(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput)">
            <summary>
            通过id修改一条角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.UpdateIsEnableRole(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableRoleInput)">
            <summary>
            通过id修改一条菜单是否启用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.IRoleService.DeleteRole(EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteRoleInput)">
            <summary>
            通过id获取一条角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierRoleService.UpdateSoldierRole(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierRoleInput)">
            <summary>
            通过用户id修改对应的角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.GetSoldier(System.String)">
            <summary>
            通过id获取一条用户信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.ValidateSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierInput)">
            <summary>
            用户登录验证
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.QuerySoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.QuerySoldierInput)">
            <summary>
            通过条件分页查询用户列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.InsertSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput)">
            <summary>
            添加一条用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.InsertAdminSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertAdminSoldierInput)">
            <summary>
            创建租户，默认添加一条租户管理员信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.UpdateSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput)">
            <summary>
            通过id修改一条用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.UpdateSoldierIsEnable(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierIsEnableInput)">
            <summary>
            通过id修改一条用户信息的启用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.TenantAccount.ISoldierService.DeleteSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteSoldierInput)">
            <summary>
            通过id删除一条用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Tenant.ITenantService.GetTenant(System.String)">
            <summary>
            通过租户id获取一条租户信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Tenant.ITenantService.QueryTenant(EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput)">
            <summary>
            通过条件分页查询租户列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Tenant.ITenantService.InsertTenant(EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput)">
            <summary>
            添加一个租户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Tenant.ITenantService.UpdateTenant(EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput)">
            <summary>
            通过id修改一个租户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Tenant.ITenantService.UpdateIsFreezeTenant(EasyIotSharp.Core.Dto.Tenant.Params.UpdateIsFreezeTenantTenantInput)">
            <summary>
            通过id修改一个租户的冻结状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.Core.Services.Tenant.ITenantService.DeleteTenant(EasyIotSharp.Core.Dto.Tenant.Params.DeleteTenantInput)">
            <summary>
            通过id删除一个租户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.ComplexPasswordAttribute">
            <summary>
            强密码验证
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Validator.ComplexPasswordAttribute.MustNumber">
            <summary>
            必须包含数字
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Validator.ComplexPasswordAttribute.MustLetter">
            <summary>
            必须包含小写或大写字母
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Validator.ComplexPasswordAttribute.MustSymbol">
            <summary>
            必须包含特殊符号
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.ComplexPasswordAttribute.IsValid(System.Object)">
            <summary>
            校验密码强度
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.ConstsOfAttribute">
            <summary>
            常量验证
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Validator.ConstsOfAttribute.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.ConstsOfAttribute.IsValid(System.Object)">
            <summary>
            验证常量值是否存在
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.EnumOfAttribute">
            <summary>
            判断枚举是否存在
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.IsBoolAttribute">
            <summary>
            Bool类型验证
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.IsCollegeCodeAttribute">
            <summary>
            院校代码验证
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.IsCollegeCodeAttribute.IsValid(System.Object)">
            <summary>
            验证院校代码格式及长度
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.IsMongoObjectIdAttribute">
            <summary>
            验证MongoObjectId是否合法
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.IsPhoneAttribute">
            <summary>
            验证手机号码是否合法
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.IsPhoneAttribute.IsValid(System.Object)">
            <summary>
            验证手机号码是否合法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.IsProvinceCodeAttribute">
            <summary>
            省份代码格式验证
            </summary>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.MinItemsCountAttribute">
            <summary>
            元素最小个数校验
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.MinItemsCountAttribute.#ctor(System.Int32)">
            <summary>
            最小个数
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.MinItemsCountAttribute.IsValid(System.Object)">
            <summary>
            校验
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.Core.Validator.StringItemsLengthAttribute">
            <summary>
            字符串数组项长度和数组大小验证
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Validator.StringItemsLengthAttribute.Length">
            <summary>
            字符串数组项长度
            </summary>
        </member>
        <member name="P:EasyIotSharp.Core.Validator.StringItemsLengthAttribute.MinSize">
            <summary>
            数组大小
            </summary>
        </member>
        <member name="M:EasyIotSharp.Core.Validator.StringItemsLengthAttribute.#ctor(System.Int32,System.Int32)">
             <summary>
            
             </summary>
             <param name="length">字符串数组项长度</param>
             <param name="minSize">数组大小</param>
        </member>
        <member name="F:EasyIotSharp.Repositories.DbConsts.CollectionNames.DB">
             <summary>
            
             </summary>
        </member>
        <member name="T:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex">
            <summary>
            es 自定义索引
            </summary>
        </member>
        <member name="F:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.Settings">
             <summary>
            初始化Settings
             </summary>
        </member>
        <member name="P:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.DefaultSettings">
            <summary>
            自定义setting
            </summary>
        </member>
        <member name="T:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty">
            <summary>
            custom mapping property
            </summary>
        </member>
        <member name="M:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.#ctor(System.String,Nest.FieldType)">
             <summary>
            
             </summary>
             <param name="filed"></param>
             <param name="type"></param>
        </member>
        <member name="P:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.LocalMetadata">
             <summary>
            
             </summary>
        </member>
        <member name="P:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.Meta">
             <summary>
            
             </summary>
        </member>
        <member name="P:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.Type">
             <summary>
            
             </summary>
        </member>
        <member name="P:EasyIotSharp.Repositories.Elasticsearch.CustomerIndex.MappingProperty.Fields">
             <summary>
            
             </summary>
        </member>
        <member name="T:EasyIotSharp.Repositories.Elasticsearch.ElasticsearchRepositoryBase">
            <summary>
             nest: https://github.com/elastic/elasticsearch-net
            </summary>
        </member>
        <member name="T:EasyIotSharp.Repositories.Elasticsearch.IElasticsearchRepository`1">
            <summary>
            You know for search
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:EasyIotSharp.Repositories.Elasticsearch.IndexConsts">
            <summary>
            data lib es index
            </summary>
        </member>
        <member name="F:EasyIotSharp.Repositories.Elasticsearch.IndexConsts.DB">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServiceBase">
            <summary>
            所有应用服务的基类，实现类必须继承此类
            </summary>
        </member>
        <member name="P:ServiceBase.ContextUser">
            <summary>
            获取当前上下文用户对象
            </summary>
        </member>
        <member name="M:ServiceBase.TaskReturnNull">
            <summary>
            空返回相当于void
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
