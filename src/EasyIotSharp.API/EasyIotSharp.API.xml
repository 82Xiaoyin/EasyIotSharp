<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyIotSharp.API</name>
    </assembly>
    <members>
        <member name="P:EasyIotSharp.API.Controllers.ApiControllerBase.TokenUserId">
            <summary>
            获取用户标识
            </summary>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.QuerySceneManagement(EasyIotSharp.Core.Dto.Rule.Params.SceneManagementInput)">
            <summary>
            通过条件分页查询场景管理
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.InsertSceneManagement(EasyIotSharp.Core.Dto.Rule.Params.InsertSceneManagement)">
            <summary>
            新增场景管理
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.UpdateSceneManagement(EasyIotSharp.Core.Dto.Rule.Params.InsertSceneManagement)">
            <summary>
            修改场景管理
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.DeleteSceneManagement(EasyIotSharp.Core.Dto.DeleteInput)">
            <summary>
            删除场景管理
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.QueryRuleChain(EasyIotSharp.Core.Dto.Rule.Params.SceneManagementInput)">
            <summary>
            通过条件分页查询场景联动
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.InsertRuleChain(EasyIotSharp.Core.Dto.Rule.Params.InsertRuleChain)">
            <summary>
            新增场景联动
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.UpdateRuleChain(EasyIotSharp.Core.Dto.Rule.Params.InsertRuleChain)">
            <summary>
            修改场景联动
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.DeleteRuleChain(EasyIotSharp.Core.Dto.DeleteInput)">
            <summary>
            删除场景联动
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.AutomationController.UpdateRuleChainState(EasyIotSharp.Core.Dto.Rule.Params.InsertRuleChain)">
            <summary>
            修改场景联动状态
            </summary>
            <param name="input">入参</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ExportController.QueryExportRecord(EasyIotSharp.Core.Dto.Export.Params.ExportRecordInput)">
            <summary>
            资源列表
            </summary>
            <param name="input">查询参数</param>
            <returns>分页结果</returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ExportController.CreateExportRecord(EasyIotSharp.Core.Dto.Export.Params.ExportRecordInsert)">
            <summary>
            创建导出记录
            </summary>
            <param name="input">创建参数</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ExportController.UpdateExportRecord(EasyIotSharp.Core.Dto.Export.ExportRecordDto)">
            <summary>
            更新导出记录
            </summary>
            <param name="input">创建参数</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ExportController.DeleteExportRecord(EasyIotSharp.Core.Dto.DeleteInput)">
            <summary>
            删除导出记录
            </summary>
            <param name="id">记录ID</param>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.FileController.QueryResources(EasyIotSharp.Core.Dto.File.Params.ResourceInput)">
            <summary>
            资源列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.FileController.UploadResponseInsert(EasyIotSharp.Core.Dto.File.Params.ResourceInsert)">
            <summary>
            资源上传
            </summary>
            <param name="insert"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.FileController.UpdateResource(EasyIotSharp.Core.Dto.File.Params.UpdateResourceInput)">
            <summary>
            资源修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.FileController.DeleteResource(EasyIotSharp.Core.Dto.DeleteInput)">
            <summary>
            资源删除
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.FileController.DownloadFile(EasyIotSharp.Core.Dto.File.Params.DownloadResourceInput)">
            <summary>
            资源下载
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.GetProtocol(System.String)">
            <summary>
            通过id获取一条协议信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.QueryProtocol(EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolInput)">
            <summary>
            通过条件分页查询协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.InsertProtocol(EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolInput)">
            <summary>
            添加一条协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.UpdateProtocol(EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolInput)">
            <summary>
            通过id修改一条协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.DeleteProtocol(EasyIotSharp.Core.Dto.Hardware.Params.DeleteProtocolInput)">
            <summary>
            通过id删除一条协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.GetProtocolConfig(System.String)">
            <summary>
            通过id获取一条协议配置信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.QueryProtocolConfig(EasyIotSharp.Core.Dto.Hardware.Params.QueryProtocolConfigInput)">
            <summary>
            通过条件分页查询协议配置信息列表
            </summary>.
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.InsertProtocolConfig(EasyIotSharp.Core.Dto.Hardware.Params.InsertProtocolConfigInput)">
            <summary>
            添加一条协议配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.UpdateProtocolConfig(EasyIotSharp.Core.Dto.Hardware.Params.UpdateProtocolConfigInput)">
            <summary>
            通过id修改一条协议配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.DeleteProtocolConfig(EasyIotSharp.Core.Dto.Hardware.Params.DeleteProtocolConfigInput)">
            <summary>
            通过id删除一条协议配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.GetSensor(System.String)">
            <summary>
            通过id获取一条传感器类型信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.QuerySensor(EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorInput)">
            <summary>
            通过条件分页查询传感器信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.InsertSensor(EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorInput)">
            <summary>
            添加一条传感器类型信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.UpdateSensor(EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorInput)">
            <summary>
            通过id修改一条传感器类型信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.DeleteSensor(EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorInput)">
            <summary>
            通过id删除一条传感器分类信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.GetSensorQuota(System.String)">
            <summary>
            通过id获取一条传感器类型指标
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.QuerySensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.QuerySensorQuotaInput)">
            <summary>
            根据条件分页查询传感器类型指标列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.InsertSensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.InsertSensorQuotaInput)">
            <summary>
            添加一条传感器类型指标
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.UpdateSensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.UpdateSensorQuotaInput)">
            <summary>
            通过id修改一条传感器类型指标
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.DeleteSensorQuota(EasyIotSharp.Core.Dto.Hardware.Params.DeleteSensorQuotaInput)">
            <summary>
            通过id删除一条传感器类型指标
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.HardwareController.GetResponse(EasyIotSharp.Core.Dto.Hardware.Params.DataRespost)">
            <summary>
            设备数据列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.GetProjectBase(System.String)">
            <summary>
            通过id获取一条项目信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.QueryProjectBase(EasyIotSharp.Core.Dto.Project.Params.QueryProjectBaseInput)">
            <summary>
            通过条件分页查询项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.InsertProjectBase(EasyIotSharp.Core.Dto.Project.Params.InsertProjectBaseInput)">
            <summary>
            添加一条项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.UpdateProjectBase(EasyIotSharp.Core.Dto.Project.Params.UpdateProjectBaseInput)">
            <summary>
            通过id修改一条项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.UpdateStateProjectBase(EasyIotSharp.Core.Dto.Project.Params.UpdateStateProjectBaseInput)">
            <summary>
            通过id修改一条项目信息状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.DeleteProjectBase(EasyIotSharp.Core.Dto.Project.Params.DeleteProjectBaseInput)">
            <summary>
            通过id删除一条项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.GetClassification(System.String)">
            <summary>
            通过id获取一条项目分类信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.QueryClassification(EasyIotSharp.Core.Dto.Project.Params.QueryClassificationInput)">
            <summary>
            通过条件分页查询项目分类信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.InsertClassification(EasyIotSharp.Core.Dto.Project.Params.InsertClassificationInput)">
            <summary>
            添加一条项目分类信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.UpdateClassification(EasyIotSharp.Core.Dto.Project.Params.UpdateClassificationInput)">
            <summary>
            通过id修改一条项目分类信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.DeleteClassification(EasyIotSharp.Core.Dto.Project.Params.DeleteClassificationInput)">
            <summary>
            通过id删除一条项目分类信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.GetGateway(System.String)">
            <summary>
            通过id获取一条网关信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.QueryGateway(EasyIotSharp.Core.Dto.Project.Params.QueryGatewayInput)">
            <summary>
            通过条件分页查询网关信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.InsertGateway(EasyIotSharp.Core.Dto.Project.Params.InsertGatewayInput)">
            <summary>
            添加一条网关信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.UpdateGateway(EasyIotSharp.Core.Dto.Project.Params.UpdateGatewayInput)">
            <summary>
            通过id修改一条网关信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.DeleteGateway(EasyIotSharp.Core.Dto.Project.Params.DeleteGatewayInput)">
            <summary>
            通过id删除一条网关信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.GetGatewayProtocol(System.String)">
            <summary>
            通过id获取一条网关协议信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.QueryGatewayProtocol(EasyIotSharp.Core.Dto.Project.Params.QueryGatewayProtocolInput)">
            <summary>
            通过条件分页查询网关协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.InsertGatewayProtocol(EasyIotSharp.Core.Dto.Project.Params.InsertGatewayProtocolInput)">
            <summary>
            添加一条网关协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.UpdateGatewayProtocol(EasyIotSharp.Core.Dto.Project.Params.UpdateGatewayProtocolInput)">
            <summary>
            通过id修改一条网关协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.DeleteGatewayProtocol(EasyIotSharp.Core.Dto.Project.Params.DeleteGatewayProtocolInput)">
            <summary>
            通过id删除一条网关协议信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.GatewayProtocolLogs(EasyIotSharp.Core.Dto.Project.Params.QueryGatewayProtocolInput)">
            <summary>
            通过网关id获取网关连接日志
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.GetSensorPoint(System.String)">
            <summary>
            通过id获取一条测点信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.QuerySensorPoint(EasyIotSharp.Core.Dto.Project.Params.QuerySensorPointInput)">
            <summary>
            通过条件分页查询测点列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.InsertSensorPoint(EasyIotSharp.Core.Dto.Project.Params.InsertSensorPointInput)">
            <summary>
            添加一条测点信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.UpdateSensorPoint(EasyIotSharp.Core.Dto.Project.Params.UpdateSensorPointInput)">
            <summary>
            通过id修改一条测点信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.DeleteSensorPoint(EasyIotSharp.Core.Dto.Project.Params.DeleteSensorPointInput)">
            <summary>
            通过id删除一条测点
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.ProjectController.QuerySensorPointChart(EasyIotSharp.Core.Dto.Project.Params.ChartInput)">
            <summary>
             首页在线告警echart图
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.QueryProjectBase(EasyIotSharp.Core.Dto.PagingInput)">
            <summary>
            通过条件分页查询报警配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.InsertAlarmsConfig(EasyIotSharp.Core.Dto.Rule.Params.InsertAlarmsConfig)">
            <summary>
            新增报警信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.UpdateAlarmsConfig(EasyIotSharp.Core.Dto.Rule.Params.InsertAlarmsConfig)">
            <summary>
            修改报警信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.DeleteAlarmsConfig(EasyIotSharp.Core.Dto.DeleteInput)">
            <summary>
            删除报警信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.UpdateAlarmsConfigState(EasyIotSharp.Core.Dto.Rule.Params.InsertAlarmsConfig)">
            <summary>
            修改报警状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.QueryNotifyConfig(EasyIotSharp.Core.Dto.PagingInput)">
            <summary>
            通过条件分页查询通知组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.InsertNotifyConfig(EasyIotSharp.Core.Dto.Rule.Params.InsertNotify)">
            <summary>
            新增通知组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.UpdateNotifyConfig(EasyIotSharp.Core.Dto.Rule.Params.InsertNotify)">
            <summary>
            修改通知组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.DeleteNotifyConfig(EasyIotSharp.Core.Dto.DeleteInput)">
            <summary>
            删除通知组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.UpdateNotifyConfigState(EasyIotSharp.Core.Dto.Rule.Params.InsertNotify)">
            <summary>
            修改通知组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.RuleController.QueryProjectBase(EasyIotSharp.Core.Dto.Rule.Params.NotifyRecordInput)">
            <summary>
            获取通知记录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.API.Controllers.TenantAccountController">
            <summary>
            租户账号控制器
            </summary>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.GetSoldier">
            <summary>
            通过id获取一条用户信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.ValidateSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.ValidateSoldierInput)">
            <summary>
            用户登录验证
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.QuerySoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.QuerySoldierInput)">
            <summary>
            通过条件分页查询用户列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.InsertSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertSoldierInput)">
            <summary>
            添加一条用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierInput)">
            <summary>
            通过id修改一条用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateSoldierIsEnable(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierIsEnableInput)">
            <summary>
            通过id修改一条用户信息的启用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.DeleteSoldier(EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteSoldierInput)">
            <summary>
            通过id删除一条用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateSoldierRole(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateSoldierRoleInput)">
            <summary>
            通过id修改一条用户的角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.GetMenu(System.String)">
            <summary>
            通过id获取一条菜单信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.QueryMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.QueryMenuInput)">
            <summary>
            通通过条件分页查询菜单列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.QueryMenuBySoldierId">
            <summary>
            获取菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.QueryUrlMenuByParentUrl(EasyIotSharp.Core.Dto.TenantAccount.Params.QueryUrlMenuByParentUrlInput)">
            <summary>
            通过父级url获取按钮级别的url
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.InsertMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput)">
            <summary>
            添加一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertMenuInput)">
            <summary>
            通过id修改一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateIsEnableMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableMenuInput)">
            <summary>
            通过od修改一条菜单是否启用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.DeleteMenu(EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteMenuInput)">
            <summary>
            通过id获取一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.GetRoleMenu(System.String)">
            <summary>
            通过id获取一条角色菜单信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.QueryRole(EasyIotSharp.Core.Dto.TenantAccount.Params.QueryRoleInput)">
            <summary>
            通通过条件分页查询菜单列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.InsertRole(EasyIotSharp.Core.Dto.TenantAccount.Params.InsertRoleInput)">
            <summary>
            添加一条角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateRole(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateRoleInput)">
            <summary>
            通过id修改一条菜单信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateIsEnableRole(EasyIotSharp.Core.Dto.TenantAccount.Params.UpdateIsEnableRoleInput)">
            <summary>
            通通过id修改一条菜单是否启用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.DeleteRole(EasyIotSharp.Core.Dto.TenantAccount.Params.DeleteRoleInput)">
            <summary>
            通过id获取一条角色信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.GetRabbitServerInfo(System.String)">
            <summary>
            获取RabbitMQ服务器配置信息
            </summary>
            <param name="id">配置ID</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.QueryRabbitServerInfo(EasyIotSharp.Core.Dto.Queue.Params.QueryRabbitServerInfoInput)">
            <summary>
            分页查询RabbitMQ服务器配置信息列表
            </summary>
            <param name="input">查询参数</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.InsertRabbitServerInfo(EasyIotSharp.Core.Dto.Queue.Params.InsertRabbitServerInfoInput)">
            <summary>
            添加RabbitMQ服务器配置信息
            </summary>
            <param name="input">添加参数</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.UpdateRabbitServerInfo(EasyIotSharp.Core.Dto.Queue.Params.UpdateRabbitServerInfoInput)">
            <summary>
            修改RabbitMQ服务器配置信息
            </summary>
            <param name="input">修改参数</param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantAccountController.DeleteRabbitServerInfo(EasyIotSharp.Core.Dto.Queue.Params.DeleteRabbitServerInfoInput)">
            <summary>
            删除RabbitMQ服务器配置信息
            </summary>
            <param name="input">删除参数</param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.API.Controllers.TenantController">
            <summary>
            租户控制器
            </summary>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantController.GetTenant(System.String)">
             <summary>
            通过租户id获取一条租户信息
             </summary>
             <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantController.QueryTenant(EasyIotSharp.Core.Dto.Tenant.Params.QueryTenantInput)">
             <summary>
            通过条件分页查询租户列表
             </summary>
             <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantController.InsertTenant(EasyIotSharp.Core.Dto.Tenant.Params.InsertTenantInput)">
            <summary>
            添加一条租户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantController.UpdateTenant(EasyIotSharp.Core.Dto.Tenant.Params.UpdateTenantInput)">
            <summary>
            通过id修改一个租户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantController.UpdateIsFreezeTenant(EasyIotSharp.Core.Dto.Tenant.Params.UpdateIsFreezeTenantTenantInput)">
            <summary>
            通过id修改一个租户的冻结状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.TenantController.DeleteTenant(EasyIotSharp.Core.Dto.Tenant.Params.DeleteTenantInput)">
            <summary>
            通过id删除一个租户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Controllers.Util4yController.UploadMediaFile(EasyIotSharp.Core.Dto.IO.Params.UploadMediaFileInput)">
            <summary>
            媒体文件上传
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Extensions.GetClientIp(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取客户端IP
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EasyIotSharp.API.Extensions.GetAbsoluteUri(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取全路径Url
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:EasyIotSharp.API.Filters.AuthorizeAttribute">
            <summary>
            拦截器(验证用户token信息)
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.Method">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.Headers">
            <summary>
            请求头
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.QueryString">
            <summary>
            查询参数
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.Body">
            <summary>
            请求体
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.ClientIp">
            <summary>
            客户端IP
            </summary>
        </member>
        <member name="P:EasyIotSharp.API.Filters.GlobalExceptionDto.Exception">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="T:EasyIotSharp.API.Filters.GlobalExceptionFilter">
            <summary>
            全局的错误响应消息处理
            </summary>
        </member>
        <member name="T:EasyIotSharp.API.Program">
            <summary>
            应用启动程序入口
               - 通过环境获取并初始化应用配置项
               - 初始化UPrime引擎
               - 初始化Serilog
               - 创建应用程序
            Serilog: https://github.com/serilog/serilog
            </summary>
        </member>
        <member name="T:EasyIotSharp.Swagger_TagDesc">
            <summary>
            swagger 标签描述
            </summary>
        </member>
    </members>
</doc>
